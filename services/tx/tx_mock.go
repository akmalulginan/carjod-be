// Code generated by MockGen. DO NOT EDIT.
// Source: domain/tx.go

// Package tx is a generated GoMock package.
package tx

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTxCoordinator is a mock of TxCoordinator interface.
type MockTxCoordinator struct {
	ctrl     *gomock.Controller
	recorder *MockTxCoordinatorMockRecorder
}

// MockTxCoordinatorMockRecorder is the mock recorder for MockTxCoordinator.
type MockTxCoordinatorMockRecorder struct {
	mock *MockTxCoordinator
}

// NewMockTxCoordinator creates a new mock instance.
func NewMockTxCoordinator(ctrl *gomock.Controller) *MockTxCoordinator {
	mock := &MockTxCoordinator{ctrl: ctrl}
	mock.recorder = &MockTxCoordinatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTxCoordinator) EXPECT() *MockTxCoordinatorMockRecorder {
	return m.recorder
}

// Begin mocks base method.
func (m *MockTxCoordinator) Begin(ctx context.Context) (context.Context, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Begin", ctx)
	ret0, _ := ret[0].(context.Context)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Begin indicates an expected call of Begin.
func (mr *MockTxCoordinatorMockRecorder) Begin(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Begin", reflect.TypeOf((*MockTxCoordinator)(nil).Begin), ctx)
}

// Commit mocks base method.
func (m *MockTxCoordinator) Commit(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Commit", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Commit indicates an expected call of Commit.
func (mr *MockTxCoordinatorMockRecorder) Commit(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Commit", reflect.TypeOf((*MockTxCoordinator)(nil).Commit), ctx)
}

// Rollback mocks base method.
func (m *MockTxCoordinator) Rollback(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Rollback", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Rollback indicates an expected call of Rollback.
func (mr *MockTxCoordinatorMockRecorder) Rollback(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Rollback", reflect.TypeOf((*MockTxCoordinator)(nil).Rollback), ctx)
}
